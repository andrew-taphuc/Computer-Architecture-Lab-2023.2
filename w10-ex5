.eqv Standard 0x10010000
.eqv RED 0xFD5E53
.eqv GREEN 0x8DECB4
.data
    x1: .asciiz "INSERT x1: "
    y1: .asciiz "INSERT y1: "
    x2: .asciiz "INSERT x2: "
    y2: .asciiz "INSERT y2: "
    err1: .asciiz "Error, choose another x!\n"
    err2: .asciiz "Error, choose another y!\n"
.text
    li $k0, Standard
    li $v0, 4
    la $a0, x1
    syscall
    li $v0, 5
    syscall
    move $s0, $v0
    li $v0, 4
    la $a0, y1
    syscall
    li $v0, 5
    syscall
    move $s1, $v0

insert_x2: 
    li $v0, 4
    la $a0, x2
    syscall
    li $v0, 5
    syscall
    move $s2, $v0
    beq $s2, $s0, err1_1

insert_y2: 
    li $v0, 4
    la $a0, y2
    syscall
    li $v0, 5
    syscall
    move $s3, $v0
    beq $s3, $s1, err2_2
    j continue

err1_1: 
    li $v0, 4
    la $a0, err1
    syscall
    j insert_x2

err2_2: 
    li $v0, 4
    la $a0, err2
    syscall
    j insert_y2

continue:
    slt $t0, $s0, $s2
    slt $t1, $s1, $s3

    beq $t0, 0, Case3
    beq $t1, 0, Case2

Case1:
    add $v0, $s1, $zero
loop_1:
    bgt $v0, $s3, Exit
    add $v1, $s0, $zero
loop_2:
    bgt $v1, $s2, Endloop_2
    beq $v0, $s1, bor_1
    beq $v0, $s3, bor_1
    beq $v1, $s0, bor_1
    beq $v1, $s2, bor_1
    sll $t8, $v0, 6
    add $t8, $t8, $v1
    sll $t8, $t8, 2
    li $a1, GREEN
    add $a2, $k0, $t8
    sw $a1, 0($a2)
    add $v1, $v1, 1
    j loop_2

bor_1:
    sll $t8, $v0, 6
    add $t8, $t8, $v1
    sll $t8, $t8, 2
    li $a1, RED
    add $a2, $k0, $t8
    sw $a1, 0($a2)
    add $v1, $v1, 1
    j loop_2

Endloop_2:
    add $v0, $v0, 1
    j loop_1

Case2:
    add $v0, $s3, $zero
loop_3:
    bgt $v0, $s1, Exit
    add $v1, $s0, $zero
loop_4: 
    bgt $v1, $s2, Endloop_4
    beq $v0, $s1, bor_2
    beq $v0, $s3, bor_2
    beq $v1, $s0, bor_2
    beq $v1, $s2, bor_2
    sll $t8, $v0, 6
    add $t8, $t8, $v1
    sll $t8, $t8, 2
    li $a1, GREEN
    add $a2, $k0, $t8
    sw $a1, 0($a2)
    add $v1, $v1, 1
    j loop_4

bor_2:
    sll $t8, $v0, 6
    add $t8, $t8, $v1
    sll $t8, $t8, 2
    li $a1, RED
    add $a2, $k0, $t8
    sw $a1, 0($a2)
    add $v1, $v1, 1
    j loop_4

Endloop_4:
    add $v0, $v0, 1
    j loop_3

Case3:
    beq $t1, 0, Case4
    add $v0, $s1, $zero
loop_5:
    bgt $v0, $s3, Exit
    add $v1, $s2, $zero
loop_6:
    bgt $v1, $s0, Endloop_6
    beq $v0, $s1, bor_3
    beq $v0, $s3, bor_3
    beq $v1, $s0, bor_3
    beq $v1, $s2, bor_3
    sll $t8, $v0, 6
    add $t8, $t8, $v1
    sll $t8, $t8, 2
    li $a1, GREEN
    add $a2, $k0, $t8
    sw $a1, 0($a2)
    add $v1, $v1, 1
    j loop_6

bor_3:
    sll $t8, $v0, 6
    add $t8, $t8, $v1
    sll $t8, $t8, 2
    li $a1, RED
    add $a2, $k0, $t8
    sw $a1, 0($a2)
    add $v1, $v1, 1
    j loop_6

Endloop_6:
    add $v0, $v0, 1
    j loop_5

Case4:
    add $v0, $s3, $zero
loop_7:
    bgt $v0, $s1, Exit
    add $v1, $s2, $zero
loop_8:
    bgt $v1, $s0, Endloop_8
    beq $v0, $s1, bor_4
    beq $v0, $s3, bor_4
    beq $v1, $s0, bor_4
    beq $v1, $s2, bor_4
    sll $t8, $v0, 6
    add $t8, $t8, $v1
    sll $t8, $t8, 2
    li $a1, GREEN
    add $a2, $k0, $t8
    sw $a1, 0($a2)
    add $v1, $v1, 1
j loop_8

bor_4:
    sll $t8, $v0, 6
    add $t8, $t8, $v1
    sll $t8, $t8, 2
    li $a1, RED
    add $a2, $k0, $t8
    sw $a1, 0($a2)
    add $v1, $v1, 1
    j loop_8

Endloop_8:
    add $v0, $v0, 1
    j loop_7

Exit: 
    li $v0, 10
    syscall
